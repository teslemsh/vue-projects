{"remainingRequest":"/home/teslem/Escritorio/vue_course/app_frontend/node_modules/babel-loader/lib/index.js!/home/teslem/Escritorio/vue_course/app_frontend/src/auth/index.js","dependencies":[{"path":"/home/teslem/Escritorio/vue_course/app_frontend/src/auth/index.js","mtime":1579459371452},{"path":"/home/teslem/Escritorio/vue_course/app_frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/teslem/Escritorio/vue_course/app_frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import router from \"../router/index\";\nexport default {\n  // User object will let us check authentication status\n  user: {\n    authenticated: false\n  },\n  // Send a request to the login URL and save the returned JWT\n  login: function login(redirect, data) {\n    localStorage.setItem('user_name', data.user);\n    localStorage.setItem('password', data.password);\n    this.user.authenticated = true; // Redirect to a specified route\n\n    if (redirect) {\n      router.push(redirect);\n    }\n  },\n  // To log out, we just need to remove the token\n  logout: function logout() {\n    localStorage.removeItem('user_name');\n    localStorage.removeItem('password');\n    this.user.authenticated = false;\n    router.push(\"login\");\n  },\n  checkAuth: function checkAuth() {\n    var jwt = localStorage.getItem('user_name');\n\n    if (jwt) {\n      this.user.authenticated = true;\n    } else {\n      this.user.authenticated = false;\n    }\n  }\n};",{"version":3,"sources":["/home/teslem/Escritorio/vue_course/app_frontend/src/auth/index.js"],"names":["router","user","authenticated","login","redirect","data","localStorage","setItem","password","push","logout","removeItem","checkAuth","jwt","getItem"],"mappings":"AAAA,OAAOA,MAAP;AAEA,eAAe;AAEb;AACAC,EAAAA,IAAI,EAAE;AACJC,IAAAA,aAAa,EAAE;AADX,GAHO;AAOb;AACAC,EAAAA,KARa,iBAQPC,QARO,EAQGC,IARH,EAQS;AAClBC,IAAAA,YAAY,CAACC,OAAb,CAAqB,WAArB,EAAkCF,IAAI,CAACJ,IAAvC;AACAK,IAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCF,IAAI,CAACG,QAAtC;AAEA,SAAKP,IAAL,CAAUC,aAAV,GAA0B,IAA1B,CAJkB,CAMlB;;AACA,QAAGE,QAAH,EAAa;AACXJ,MAAAA,MAAM,CAACS,IAAP,CAAYL,QAAZ;AACD;AACJ,GAlBY;AAmBb;AACAM,EAAAA,MApBa,oBAoBJ;AACPJ,IAAAA,YAAY,CAACK,UAAb,CAAwB,WAAxB;AACAL,IAAAA,YAAY,CAACK,UAAb,CAAwB,UAAxB;AACA,SAAKV,IAAL,CAAUC,aAAV,GAA0B,KAA1B;AAEAF,IAAAA,MAAM,CAACS,IAAP,CAAY,OAAZ;AACD,GA1BY;AA4BbG,EAAAA,SA5Ba,uBA4BD;AACV,QAAIC,GAAG,GAAGP,YAAY,CAACQ,OAAb,CAAqB,WAArB,CAAV;;AAEA,QAAID,GAAJ,EAAS;AACP,WAAKZ,IAAL,CAAUC,aAAV,GAA0B,IAA1B;AACD,KAFD,MAGK;AACH,WAAKD,IAAL,CAAUC,aAAV,GAA0B,KAA1B;AACD;AACF;AArCY,CAAf","sourcesContent":["import router from '../router/index';\n\nexport default {\n\n  // User object will let us check authentication status\n  user: {\n    authenticated: false\n  },\n\n  // Send a request to the login URL and save the returned JWT\n  login(redirect, data) {\n      localStorage.setItem('user_name', data.user);\n      localStorage.setItem('password', data.password);\n\n      this.user.authenticated = true;\n\n      // Redirect to a specified route\n      if(redirect) {\n        router.push(redirect);\n      }\n  },\n  // To log out, we just need to remove the token\n  logout() {\n    localStorage.removeItem('user_name');\n    localStorage.removeItem('password');\n    this.user.authenticated = false;\n\n    router.push(\"login\");\n  },\n\n  checkAuth() {\n    let jwt = localStorage.getItem('user_name');\n\n    if (jwt) {\n      this.user.authenticated = true\n    }\n    else {\n      this.user.authenticated = false\n    }\n  }\n}"]}]}