{"remainingRequest":"/home/teslem/Escritorio/vue_course/app_frontend/node_modules/babel-loader/lib/index.js!/home/teslem/Escritorio/vue_course/app_frontend/src/store/modules/products.js","dependencies":[{"path":"/home/teslem/Escritorio/vue_course/app_frontend/src/store/modules/products.js","mtime":1580678811516},{"path":"/home/teslem/Escritorio/vue_course/app_frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/teslem/Escritorio/vue_course/app_frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import shop from \"@/api/shop\";\nexport default {\n  namespaced: true,\n  state: {\n    items: []\n  },\n  getters: {\n    availableProducts: function availableProducts(state, getters) {\n      return state.items.filter(function (product) {\n        return product.inventory > 0;\n      });\n    },\n    productIsInStock: function productIsInStock() {\n      return function (product) {\n        return product.inventory > 0;\n      };\n    }\n  },\n  mutations: {\n    setProducts: function setProducts(state, products) {\n      // update products\n      state.items = products;\n    },\n    decrementProductInventory: function decrementProductInventory(state, product) {\n      product.inventory--;\n    }\n  },\n  actions: {\n    fetchProducts: function fetchProducts(_ref) {\n      var commit = _ref.commit;\n      return new Promise(function (resolve, reject) {\n        // make the call\n        // call setProducts mutation\n        shop.getProducts(function (products) {\n          commit('setProducts', products);\n          resolve();\n        });\n      });\n    }\n  }\n};",{"version":3,"sources":["/home/teslem/Escritorio/vue_course/app_frontend/src/store/modules/products.js"],"names":["shop","namespaced","state","items","getters","availableProducts","filter","product","inventory","productIsInStock","mutations","setProducts","products","decrementProductInventory","actions","fetchProducts","commit","Promise","resolve","reject","getProducts"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,YAAjB;AAEA,eAAe;AACbC,EAAAA,UAAU,EAAE,IADC;AAGbC,EAAAA,KAAK,EAAE;AACLC,IAAAA,KAAK,EAAE;AADF,GAHM;AAObC,EAAAA,OAAO,EAAE;AACPC,IAAAA,iBADO,6BACYH,KADZ,EACmBE,OADnB,EAC4B;AACjC,aAAOF,KAAK,CAACC,KAAN,CAAYG,MAAZ,CAAmB,UAAAC,OAAO;AAAA,eAAIA,OAAO,CAACC,SAAR,GAAoB,CAAxB;AAAA,OAA1B,CAAP;AACD,KAHM;AAKPC,IAAAA,gBALO,8BAKa;AAClB,aAAO,UAACF,OAAD,EAAa;AAClB,eAAOA,OAAO,CAACC,SAAR,GAAoB,CAA3B;AACD,OAFD;AAGD;AATM,GAPI;AAmBbE,EAAAA,SAAS,EAAE;AACTC,IAAAA,WADS,uBACIT,KADJ,EACWU,QADX,EACqB;AAC5B;AACAV,MAAAA,KAAK,CAACC,KAAN,GAAcS,QAAd;AACD,KAJQ;AAMTC,IAAAA,yBANS,qCAMkBX,KANlB,EAMyBK,OANzB,EAMkC;AACzCA,MAAAA,OAAO,CAACC,SAAR;AACD;AARQ,GAnBE;AA8BbM,EAAAA,OAAO,EAAE;AACPC,IAAAA,aADO,+BACiB;AAAA,UAATC,MAAS,QAATA,MAAS;AACtB,aAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtC;AACA;AACAnB,QAAAA,IAAI,CAACoB,WAAL,CAAiB,UAAAR,QAAQ,EAAI;AAC3BI,UAAAA,MAAM,CAAC,aAAD,EAAgBJ,QAAhB,CAAN;AACAM,UAAAA,OAAO;AACR,SAHD;AAID,OAPM,CAAP;AAQD;AAVM;AA9BI,CAAf","sourcesContent":["import shop from \"@/api/shop\";\n\nexport default {\n  namespaced: true,\n\n  state: {\n    items: []\n  },\n\n  getters: {\n    availableProducts (state, getters) {\n      return state.items.filter(product => product.inventory > 0)\n    },\n\n    productIsInStock () {\n      return (product) => {\n        return product.inventory > 0\n      }\n    }\n  },\n\n  mutations: {\n    setProducts (state, products) {\n      // update products\n      state.items = products\n    },\n\n    decrementProductInventory (state, product) {\n      product.inventory--\n    }\n  },\n\n  actions: {\n    fetchProducts({commit}) {\n      return new Promise((resolve, reject) => {\n        // make the call\n        // call setProducts mutation\n        shop.getProducts(products => {\n          commit('setProducts', products)\n          resolve()\n        })\n      })\n    }\n  }\n}\n"]}]}